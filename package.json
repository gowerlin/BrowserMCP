{
  "name": "@browsermcp/mcp",
  "version": "0.2.0",
  "description": "MCP server for browser automation with Chrome DevTools Protocol integration and smart fallback system",
  "author": "Browser MCP",
  "homepage": "https://github.com/gowerlin/BrowserMCP",
  "bugs": "https://github.com/gowerlin/BrowserMCP/issues",
  "type": "module",
  "bin": {
    "mcp-server-browsermcp": "dist/index.js"
  },
  "files": [
    "dist"
  ],
  "scripts": {
    "typecheck": "tsc --noEmit",
    "build": "tsup src/index.ts --format esm && shx chmod +x dist/*.js",
    "prepare": "npm run build",
    "watch": "tsup src/index.ts --format esm --watch ",
    "inspector": "CLIENT_PORT=9001 SERVER_PORT=9002 pnpx @modelcontextprotocol/inspector node dist/index.js",
    "test": "node test/run-all-tests.js",
    "test:unit": "npx mocha test/devtools.test.cjs --timeout 30000",
    "test:integration": "npx mocha test/integration.test.cjs --timeout 60000",
    "test:verbose": "node test/run-all-tests.js --verbose",
    "test:bail": "node test/run-all-tests.js --bail",
    "clean-ports": "node -e \"const { killProcessOnPort } = require('./dist/utils/port.js'); [9001, 9002, 9003].forEach(port => killProcessOnPort(port));\""
  },
  "dependencies": {
    "@modelcontextprotocol/sdk": "^1.8.0",
    "commander": "^13.1.0",
    "puppeteer": "^22.0.0",
    "ws": "^8.18.1",
    "zod": "^3.25.76",
    "zod-to-json-schema": "^3.24.3"
  },
  "devDependencies": {
    "@types/ws": "^8.18.0",
    "mocha": "^10.0.0",
    "shx": "^0.3.4",
    "tsup": "^8.4.0",
    "typescript": "^5.6.2"
  }
}
